<?php

namespace BaseBundle\Tests\Entity;

use DateInterval;
use DateTime;

class PartidaEntityTest extends Entity
{

    public function testPartida()
    {

        //mokear el repositorio para que devuelva esta partida
        parent::mock();
        $this->repository->expects($this->once())
            ->method('find')
            ->will($this->returnValue($this->partida));

        // mockear el  EntityManager para que devuelva el repositorio mockeado
        $this->emMod->expects($this->once())
            ->method('getRepository')
            ->will($this->returnValue($this->repository));


        $partidas = $this->emMod->getRepository('BaseBundle:Partida')->find(0);

        //asserts
        $this->assertEquals('test1?A', $partidas->getNombre());
        $this->assertEquals(null, $this->em->persist($partidas));
        $partidas->setNombre('test2?B');
        $this->assertEquals('test2?B', $partidas->getNombre());
        $this->assertEquals(null, $this->em->remove($partidas));
    }

    public function testAdminPartidas()
    {
        $partidas = $this->em->getRepository('BaseBundle:Partida')->findAdminPardidas(2);
        $this->assertTrue(count($partidas) > 0);
    }

    public function testFindPartidaInfo()
    {
        $partida = $this->em->getRepository('BaseBundle:Partida')->findPartidaInfo(2, 1);
        $id = $partida[0][0]->getId();
        $this->assertEquals(1, $id);
    }

    public function testNewPartida()
    {
        $now = new DateTime('now');
        $fin = $now->add(new DateInterval('P10D'));
        $data = ['nombre' => 'test1?A', 'password' => '', 'fin' => $fin, 'maxJugadores' => 25, 'maxOfertas' => 2,
            'tiempoOferta' => 5, 'ratio' => 0.3, 'aluPUsuario' => 10, 'expY' => 1, 'expZ' => 1];
        $this->em->getRepository('BaseBundle:Partida')->SetNewPartida($data, 2);

        //busca partida
        $partida = $this->em->getRepository('BaseBundle:Partida')->findOneByNombre('test1?A');
        $this->assertTrue(count($partida) > 0);
        $this->em->remove($partida);
        $this->em->flush();
    }

    public function testIsMyAdminGame()
    {
        $partida = $this->em->getRepository('BaseBundle:Partida')->isMyAdminGame(1, 2);
        $id = $partida[0]['id'];
        $this->assertEquals(1, $id);
    }
}
